import{I as m,W as g,aA as h,r as l,ah as d,e as f,_ as b,ay as R,j as S,a7 as a}from"./CfCDb_Qm.js";const y=m({class:[String,Array,Object],style:{type:[String,Array,Object],default:null}},"component");function x(t){const o=g("useRender");o.render=t}function W(t){let o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"content";const e=h(),i=l();if(d){const s=new ResizeObserver(n=>{n.length&&(o==="content"?i.value=n[0].contentRect:i.value=n[0].target.getBoundingClientRect())});f(()=>{s.disconnect()}),b(()=>e.el,(n,r)=>{r&&(s.unobserve(r),i.value=void 0),n&&s.observe(n)},{flush:"post"})}return{resizeRef:e,contentRect:R(i)}}const H=m({tag:{type:String,default:"div"}},"tag"),N=m({height:[Number,String],maxHeight:[Number,String],maxWidth:[Number,String],minHeight:[Number,String],minWidth:[Number,String],width:[Number,String]},"dimension");function w(t){return{dimensionStyles:S(()=>{const e={},i=a(t.height),s=a(t.maxHeight),n=a(t.maxWidth),r=a(t.minHeight),c=a(t.minWidth),u=a(t.width);return i!=null&&(e.height=i),s!=null&&(e.maxHeight=s),n!=null&&(e.maxWidth=n),r!=null&&(e.minHeight=r),c!=null&&(e.minWidth=c),u!=null&&(e.width=u),e})}}export{H as a,W as b,w as c,N as d,y as m,x as u};
